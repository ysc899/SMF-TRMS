--  Generate SQL 
--  Version:                   V7R4M0 190621 
--  Generated on:              22/12/09 13:17:00 
--  Relational Database:       NEODIN 
--  Standards Option:          Db2 for i 
--DROP SPECIFIC PROCEDURE IF EXISTS MCLISOLIB.SEL02_DAYERRORCNT_MC400M_SP ; 
--SET PATH "QSYS","QSYS2","SYSPROC","SYSIBMADM","NEO030" ; 
CREATE OR REPLACE PROCEDURE MCLISOLIB.SEL02_DAYERRORCNT_MC400M_SP ( 
  IN $P_COR VARCHAR(3) , 
  IN $P_FDT VARCHAR(8) , 
  IN $P_TDT VARCHAR(8) ) 
  DYNAMIC RESULT SETS 1 
  LANGUAGE SQL 
  SPECIFIC MCLISOLIB.SEL02_DAYERRORCNT_MC400M_SP 
  NOT DETERMINISTIC 
  MODIFIES SQL DATA 
  CALLED ON NULL INPUT 
  SET OPTION  ALWBLK = *ALLREAD , 
  ALWCPYDTA = *OPTIMIZE , 
  COMMIT = *CHG , 
  DBGVIEW = *SOURCE , 
  DECRESULT = (31, 31, 00) , 
  DFTRDBCOL = *NONE , 
  DLYPRP = *NO , 
  DYNDFTCOL = *NO , 
  DYNUSRPRF = *USER , 
  SRTSEQ = *HEX 
  BEGIN 
DECLARE CUR CURSOR FOR 
SELECT '바코드오류' , IFNULL ( CNT1 , 0 ) AS CNT1 , IFNULL ( CNT2 , 0 ) AS CNT2 , IFNULL ( CNT3 , 0 ) AS CNT3 , IFNULL ( CNT4 , 0 ) AS CNT4 , IFNULL ( CNT5 , 0 ) AS CNT5 , IFNULL ( CNT6 , 0 ) AS CNT6 
FROM ( 
SELECT 
SUM ( 1 ) CNT1 , 
SUM ( CASE WHEN F910USB = '' THEN 1 ELSE 0 END ) CNT2 , 
SUM ( CASE WHEN F910USB = '6526' THEN 1 ELSE 0 END ) CNT3 , 
SUM ( CASE WHEN F910USB = '6520' THEN 1 ELSE 0 END ) CNT4 , 
SUM ( CASE WHEN F910USB = '6540' THEN 1 ELSE 0 END ) CNT5 , 
SUM ( CASE WHEN F910USB = '6550' THEN 1 ELSE 0 END ) CNT6 
FROM MCLISDLIB . MC400M@ 
INNER JOIN JMTSLIB . MM910M@ 
ON F910COR = F400COR AND F910SAB = CASE WHEN F400FL5 = '' THEN F400CUR ELSE TRIM ( F400FL5 ) END 
WHERE F400COR = $P_COR AND F400CDT BETWEEN $P_FDT AND $P_TDT AND INSTR ( F400ECD , '0004' ) > 0 
) 
UNION ALL 
SELECT '접수누락' , IFNULL ( CNT1 , 0 ) AS CNT1 , IFNULL ( CNT2 , 0 ) AS CNT2 , IFNULL ( CNT3 , 0 ) AS CNT3 , IFNULL ( CNT4 , 0 ) AS CNT4 , IFNULL ( CNT5 , 0 ) AS CNT5 , IFNULL ( CNT6 , 0 ) AS CNT6 
FROM ( 
SELECT 
SUM ( 1 ) CNT1 , 
SUM ( CASE WHEN F910USB = '' THEN 1 ELSE 0 END ) CNT2 , 
SUM ( CASE WHEN F910USB = '6526' THEN 1 ELSE 0 END ) CNT3 , 
SUM ( CASE WHEN F910USB = '6520' THEN 1 ELSE 0 END ) CNT4 , 
SUM ( CASE WHEN F910USB = '6540' THEN 1 ELSE 0 END ) CNT5 , 
SUM ( CASE WHEN F910USB = '6550' THEN 1 ELSE 0 END ) CNT6 
FROM MCLISDLIB . MC400M@ 
INNER JOIN JMTSLIB . MM910M@ 
ON F910COR = F400COR AND F910SAB = CASE WHEN F400FL5 = '' THEN F400CUR ELSE TRIM ( F400FL5 ) END 
WHERE F400COR = $P_COR AND F400CDT BETWEEN $P_FDT AND $P_TDT AND INSTR ( F400ECD , '0002' ) > 0 
) 
UNION ALL 
SELECT '미도착' , IFNULL ( CNT1 , 0 ) AS CNT1 , IFNULL ( CNT2 , 0 ) AS CNT2 , IFNULL ( CNT3 , 0 ) AS CNT3 , IFNULL ( CNT4 , 0 ) AS CNT4 , IFNULL ( CNT5 , 0 ) AS CNT5 , IFNULL ( CNT6 , 0 ) AS CNT6 
FROM ( 
SELECT 
SUM ( 1 ) CNT1 , 
SUM ( CASE WHEN F910USB = '' THEN 1 ELSE 0 END ) CNT2 , 
SUM ( CASE WHEN F910USB = '6526' THEN 1 ELSE 0 END ) CNT3 , 
SUM ( CASE WHEN F910USB = '6520' THEN 1 ELSE 0 END ) CNT4 , 
SUM ( CASE WHEN F910USB = '6540' THEN 1 ELSE 0 END ) CNT5 , 
SUM ( CASE WHEN F910USB = '6550' THEN 1 ELSE 0 END ) CNT6 
FROM MCLISDLIB . MC400M@ 
INNER JOIN JMTSLIB . MM910M@ 
ON F910COR = F400COR AND F910SAB = CASE WHEN F400FL5 = '' THEN F400CUR ELSE TRIM ( F400FL5 ) END 
WHERE F400COR = $P_COR AND F400CDT BETWEEN $P_FDT AND $P_TDT AND INSTR ( F400ECD , '0001' ) > 0 
) 
UNION ALL 
SELECT '이름상이' , IFNULL ( CNT1 , 0 ) AS CNT1 , IFNULL ( CNT2 , 0 ) AS CNT2 , IFNULL ( CNT3 , 0 ) AS CNT3 , IFNULL ( CNT4 , 0 ) AS CNT4 , IFNULL ( CNT5 , 0 ) AS CNT5 , IFNULL ( CNT6 , 0 ) AS CNT6 
FROM ( 
SELECT 
SUM ( 1 ) CNT1 , 
SUM ( CASE WHEN F910USB = '' THEN 1 ELSE 0 END ) CNT2 , 
SUM ( CASE WHEN F910USB = '6526' THEN 1 ELSE 0 END ) CNT3 , 
SUM ( CASE WHEN F910USB = '6520' THEN 1 ELSE 0 END ) CNT4 , 
SUM ( CASE WHEN F910USB = '6540' THEN 1 ELSE 0 END ) CNT5 , 
SUM ( CASE WHEN F910USB = '6550' THEN 1 ELSE 0 END ) CNT6 
FROM MCLISDLIB . MC400M@ 
INNER JOIN JMTSLIB . MM910M@ 
ON F910COR = F400COR AND F910SAB = CASE WHEN F400FL5 = '' THEN F400CUR ELSE TRIM ( F400FL5 ) END 
WHERE F400COR = $P_COR AND F400CDT BETWEEN $P_FDT AND $P_TDT AND INSTR ( F400ECD , '0006' ) > 0 
) 
UNION ALL 
SELECT '검사 부적합' , IFNULL ( CNT1 , 0 ) AS CNT1 , IFNULL ( CNT2 , 0 ) AS CNT2 , IFNULL ( CNT3 , 0 ) AS CNT3 , IFNULL ( CNT4 , 0 ) AS CNT4 , IFNULL ( CNT5 , 0 ) AS CNT5 , IFNULL ( CNT6 , 0 ) AS CNT6 
FROM ( 
SELECT 
SUM ( 1 ) CNT1 , 
SUM ( CASE WHEN F910USB = '' THEN 1 ELSE 0 END ) CNT2 , 
SUM ( CASE WHEN F910USB = '6526' THEN 1 ELSE 0 END ) CNT3 , 
SUM ( CASE WHEN F910USB = '6520' THEN 1 ELSE 0 END ) CNT4 , 
SUM ( CASE WHEN F910USB = '6540' THEN 1 ELSE 0 END ) CNT5 , 
SUM ( CASE WHEN F910USB = '6550' THEN 1 ELSE 0 END ) CNT6 
FROM MCLISDLIB . MC400M@ 
INNER JOIN JMTSLIB . MM910M@ 
ON F910COR = F400COR AND F910SAB = CASE WHEN F400FL5 = '' THEN F400CUR ELSE TRIM ( F400FL5 ) END 
WHERE F400COR = $P_COR AND F400CDT BETWEEN $P_FDT AND $P_TDT AND INSTR ( F400ECD , '0014' ) > 0 
) 
UNION ALL 
SELECT '그 외' , IFNULL ( CNT1 , 0 ) AS CNT1 , IFNULL ( CNT2 , 0 ) AS CNT2 , IFNULL ( CNT3 , 0 ) AS CNT3 , IFNULL ( CNT4 , 0 ) AS CNT4 , IFNULL ( CNT5 , 0 ) AS CNT5 , IFNULL ( CNT6 , 0 ) AS CNT6 
FROM ( 
SELECT 
SUM ( 1 ) CNT1 , 
SUM ( CASE WHEN F910USB = '' THEN 1 ELSE 0 END ) CNT2 , 
SUM ( CASE WHEN F910USB = '6526' THEN 1 ELSE 0 END ) CNT3 , 
SUM ( CASE WHEN F910USB = '6520' THEN 1 ELSE 0 END ) CNT4 , 
SUM ( CASE WHEN F910USB = '6540' THEN 1 ELSE 0 END ) CNT5 , 
SUM ( CASE WHEN F910USB = '6550' THEN 1 ELSE 0 END ) CNT6 
FROM MCLISDLIB . MC400M@ 
INNER JOIN JMTSLIB . MM910M@ 
ON F910COR = F400COR AND F910SAB = CASE WHEN F400FL5 = '' THEN F400CUR ELSE TRIM ( F400FL5 ) END 
WHERE F400COR = $P_COR AND F400CDT BETWEEN $P_FDT AND $P_TDT AND 
( SUBSTR ( TRIM ( F400ECD ) , 1 , 4 ) NOT IN ( '0001' , '0002' , '0004' , '0006' , '0014' ) OR ( SUBSTR ( F400ECD , 5 , 4 ) NOT IN ( '    ' , '0001' , '0002' , '0004' , '0006' , '0014' ) ) 
OR ( SUBSTR ( F400ECD , 9 , 4 ) NOT IN ( '    ' , '0001' , '0002' , '0004' , '0006' , '0014' ) ) 
OR ( SUBSTR ( F400ECD , 13 , 4 ) NOT IN ( '    ' , '0001' , '0002' , '0004' , '0006' , '0014' ) ) OR ( SUBSTR ( F400ECD , 17 , 4 ) NOT IN ( '    ' , '0001' , '0002' , '0004' , '0006' , '0014' ) ) ) 
) ; 
OPEN CUR ; 
SET RESULT SETS CURSOR CUR ; 
END  ; 
